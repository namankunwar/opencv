def classify_curve(coordinates):
    # Step 1: Identify the transition point where y changes from constant to varying
    transition_index = 0
    for i in range(1, len(coordinates)):
        if coordinates[i][1] != coordinates[i - 1][1]:  # Compare y-coordinates of consecutive points
            transition_index = i
            break

    # Step 2: Split the coordinates into "before" and "after"
    before = coordinates[:transition_index]  # All points before the transition point
    after = coordinates[transition_index:]  # All points including and after the transition point

    # Step 3: Check trends
    before_above = all(y > 0 for x, y in before)  # Are all "before" points above the x-axis?
    before_below = all(y <= 0 for x, y in before)  # Are all "before" points below or on the x-axis?
    after_above = all(y > 0 for x, y in after)  # Are all "after" points above the x-axis?
    after_below = all(y <= 0 for x, y in after)  # Are all "after" points below or on the x-axis?

    # Step 4: Classify based on the rules
    if before_below and after_above:
        return "Bottom-left (⅃)"
    elif before_above and after_below:
        return "Top-right (Flipped Γ)"
    elif before_above and after_above:
        return "Top-left (Γ)"
    elif before_below and after_below:
        return "Bottom-right (L)"
    else:
        return "Unknown Curve Type"

# Given list of coordinates
coordinates = [
    (0.0, 0.0), (1.7241379310344827, 0.0), (3.4482758620689653, 0.0), 
    (5.172413793103448, 0.0), (6.896551724137931, 0.0), (8.620689655172413, 0.0), 
    (10.344827586206897, 0.0), (12.068965517241379, 0.0), (13.793103448275861, 0.0), 
    (15.517241379310343, 0.0), (17.241379310344826, 0.0), (18.96551724137931, 0.0), 
    (20.689655172413794, 0.0), (22.413793103448274, 0.0), (24.137931034482758, 0.0), 
    (25.86206896551724, 0.0), (27.586206896551722, 0.0), (29.310344827586206, 0.0), 
    (31.034482758620687, 0.0), (32.75862068965517, 0.0), (34.48275862068965, 0.0), 
    (36.206896551724135, 0.0), (37.93103448275862, 0.0), (39.6551724137931, 0.0), 
    (41.37931034482759, 0.0), (43.103448275862064, 0.0), (44.82758620689655, 0.0), 
    (46.55172413793103, 0.0), (48.275862068965516, 0.0), (50.0, 0.0), (50.0, 0.0), 
    (51.724137931034484, 0.29726516052318713), (53.44827586206897, 1.1890606420927485), 
    (55.172413793103445, 2.6753864447086766), (56.89655172413793, 4.756242568370984), 
    (58.62068965517241, 7.431629013079666), (60.3448275862069, 10.70154577883472), 
    (62.06896551724138, 14.56599286563615), (63.79310344827586, 19.024970273483937), 
    (65.51724137931035, 24.078478002378134), (67.24137931034483, 29.726516052318665), 
    (68.9655172413793, 35.96908442330556), (70.6896551724138, 42.80618311533888), 
    (72.41379310344827, 50.237812128418526), (74.13793103448276, 58.2639714625446), 
    (75.86206896551724, 66.88466111771699), (77.58620689655172, 76.09988109393575), 
    (79.3103448275862, 85.90963139120095), (81.03448275862068, 96.31391200951245), 
    (82.75862068965517, 107.3127229488704), (84.48275862068965, 118.90606420927466), 
    (86.20689655172413, 131.09393579072525), (87.93103448275862, 143.87633769322235), 
    (89.65517241379311, 157.25326991676582), (91.37931034482759, 171.22473246135553), 
    (93.10344827586206, 185.79072532699163), (94.82758620689654, 200.9512485136741), 
    (96.55172413793103, 216.70630202140308), (98.27586206896552, 233.0558858501784), 
    (100.0, 250.0)
] #Bottom-left (⅃)

coordinates2 = [
    (0, 0), (1, 0), (2, 0), (3, 0), (4, 0), (5, 0), (6, 0), (7, 0),
    (8, 0), (9, 0), (10, 0), (11, 0), (12, 0), (13, 0), (14, 0),
    (15, 0), (16, 0), (17, 0), (18, 0), (19, 0), (20, 0), (21, 0),
    (22, 0), (23, 0), (24, 0), (25, 0), (26, 0), (27, 0), (28, 0),
    (29, 0), (30, 0), (31, 0), (32, 0), (33, 0), (34, 0), (35, 0),
    (36, 0), (37, 0), (38, 0), (39, 0), (40, 0), (41, 0), (42, 0),
    (43, 0), (44, 0), (45, 0), (46, 0), (47, 0), (48, 0), (49, -5)
] #  Top-right (Flipped Γ)

coordinates1 = [
    (0.0, 0.0), (10.0, 0.0), (20.0, 0.0),  
    (30.0, 5.0), (40.0, 15.0), (50.0, 30.0)  #Bottom-left (⅃)
]
result = classify_curve(coordinates2)
print("Curve type:", result)

